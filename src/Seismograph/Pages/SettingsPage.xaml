<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="Seismograph.SettingsPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Seismograph"
    xmlns:common="using:Seismograph.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    FontSize="20" FontWeight="Light"
    mc:Ignorable="d">


    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="80"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid Background="#00b2f0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="OnGoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource SettingsBackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Grid.Column="1" Text="Settings" Style="{StaticResource SettingsHeaderTextStyle}"/>
        </Grid>

        <Border BorderBrush="#00b2f0" BorderThickness="1,0,0,0"  Grid.Row="1" >
            <Grid Margin="30">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="X Color:" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Margin="10" />

                <local:ColorPicker x:Name="ColorXPicker" Grid.Row="1"  HorizontalAlignment="Stretch"
                                   UseLayoutRounding="True"   Margin="20,5"
                                   Header="X Color" />

                <TextBlock Text="Y Color:" Grid.Row="2" Grid.Column="0" VerticalAlignment="Center"  Margin="10"/>

                <local:ColorPicker x:Name="ColorYPicker" Grid.Row="3"  HorizontalAlignment="Stretch"
                                   UseLayoutRounding="True"    Margin="20,5"
                                   Header="Y Color"  />

                <TextBlock Text="Z Color:" Grid.Row="4" VerticalAlignment="Center"  Margin="10"/>

                <local:ColorPicker x:Name="ColorZPicker" Grid.Row="5"  HorizontalAlignment="Stretch"
                                   UseLayoutRounding="True"   Margin="20,5"
                                   Header="Z Color" />



                <TextBlock Text="Interval (ms):" Grid.Row="6" Grid.Column="0" VerticalAlignment="Center"  Margin="10"/>

                <TextBox x:Name="TextBoxInterval" Grid.Row="7"  HorizontalAlignment="Stretch"
                                   UseLayoutRounding="True"  Margin="10,0" InputScope="Number"
                                 >
                </TextBox>

            </Grid>
        </Border>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
